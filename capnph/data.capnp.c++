// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: data.capnp

#include "data.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<81> b_86ebb1259307df55 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85, 223,   7, 147,  37, 177, 235, 134,
     18,   0,   0,   0,   1,   0,   1,   0,
     56,  55,  96, 157, 147,  94,   9, 173,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112, 104,  47, 100,
     97, 116,  97,  46,  99,  97, 112, 110,
    112,  58,  69, 120, 101,  99, 117, 116,
    105, 111, 110,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    113,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    128,   0,   0,   0,   2,   0,   1,   0,
    105, 115,  83, 104, 117, 102, 102, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114, 116, 105, 116, 105, 111,
    110,  73, 100,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 100, 100,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 110,  99,  79, 114,  68, 101,
    112,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_86ebb1259307df55 = b_86ebb1259307df55.words;
#if !CAPNP_LITE
static const uint16_t m_86ebb1259307df55[] = {3, 0, 1, 2};
static const uint16_t i_86ebb1259307df55[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_86ebb1259307df55 = {
  0x86ebb1259307df55, b_86ebb1259307df55.words, 81, nullptr, m_86ebb1259307df55,
  0, 4, i_86ebb1259307df55, nullptr, nullptr, { &s_86ebb1259307df55, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ea9f732119b10178 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    120,   1, 177,  25,  33, 115, 159, 234,
     18,   0,   0,   0,   1,   0,   0,   0,
     56,  55,  96, 157, 147,  94,   9, 173,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112, 104,  47, 100,
     97, 116,  97,  46,  99,  97, 112, 110,
    112,  58,  82, 101, 115, 117, 108, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea9f732119b10178 = b_ea9f732119b10178.words;
#if !CAPNP_LITE
static const uint16_t m_ea9f732119b10178[] = {0};
static const uint16_t i_ea9f732119b10178[] = {0};
const ::capnp::_::RawSchema s_ea9f732119b10178 = {
  0xea9f732119b10178, b_ea9f732119b10178.words, 33, nullptr, m_ea9f732119b10178,
  0, 1, i_ea9f732119b10178, nullptr, nullptr, { &s_ea9f732119b10178, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ab8efc637371947e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    126, 148, 113, 115,  99, 252, 142, 171,
     18,   0,   0,   0,   1,   0,   0,   0,
     56,  55,  96, 157, 147,  94,   9, 173,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99,  97, 112, 110, 112, 104,  47, 100,
     97, 116,  97,  46,  99,  97, 112, 110,
    112,  58,  77, 101, 115, 115,  97, 103,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109, 115, 103,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ab8efc637371947e = b_ab8efc637371947e.words;
#if !CAPNP_LITE
static const uint16_t m_ab8efc637371947e[] = {0};
static const uint16_t i_ab8efc637371947e[] = {0};
const ::capnp::_::RawSchema s_ab8efc637371947e = {
  0xab8efc637371947e, b_ab8efc637371947e.words, 33, nullptr, m_ab8efc637371947e,
  0, 1, i_ab8efc637371947e, nullptr, nullptr, { &s_ab8efc637371947e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Execution
constexpr uint16_t Execution::_capnpPrivate::dataWordSize;
constexpr uint16_t Execution::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Execution::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Execution::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Result
constexpr uint16_t Result::_capnpPrivate::dataWordSize;
constexpr uint16_t Result::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Result::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Result::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Message
constexpr uint16_t Message::_capnpPrivate::dataWordSize;
constexpr uint16_t Message::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Message::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Message::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



